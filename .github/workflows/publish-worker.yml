name: Publish icij-worker

on:
  push:
    tags:
      - icij-worker-*

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create GH release
        run: gh release create "$tag" --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}

  publish-icij-worker:
    needs: [create-release]
    runs-on: ubuntu-latest
    environment:
      name: pypi-icij-worker
      url: https://pypi.org/project/icij-worker/
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.7"
          python-version: "3.10"
      - name: Build and publish on PyPi
        run: |
          cd icij-worker
          uv build
          uv publish --trusted-publishing always

  publish-http-service-docker:
    needs: [ create-release ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Determine DBMate architecture
        id: arch
        run: |
          DBMATE_ARCH=$(arch || uname -m)
          if [[ "$DBMATE_ARCH" == "x86_64" || "$DBMATE_ARCH" == "amd64" ]]; then
            DBMATE_ARCH="amd64"
          elif [[ "$DBMATE_ARCH" == "aarch64" || "$DBMATE_ARCH" == "arm64" ]]; then
            DBMATE_ARCH="arm64"
          elif [[ "$DBMATE_ARCH" == "i386" ]]; then
            DBMATE_ARCH="386"
          else
            echo "Unsupported architecture: $DBMATE_ARCH" >&2
            exit 1
          fi
          echo "DBMATE_ARCH=$DBMATE_ARCH" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: icij/task-service

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push the service image
        uses: docker/build-push-action@v6
        with:
          context: icij-worker
          target: http-service
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            dbmate_arch=${{ env.DBMATE_ARCH }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false
