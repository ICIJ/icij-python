name: Test for icij-worker

on:
  push:
    branches: [ 'main' ]
  pull_request:
    paths:
      - 'icij-worker/**.py'
      - '.github/workflows/tests-worker.yml'

jobs:
  test-icij-worker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: psf/black@stable
        with:
          options: "--check --verbose"
          jupyter: true
          src: "icij-worker"
          version: "~= 24.2.0"
      - name: Installing DBmate
        run: |
          curl -fsSL -o /usr/local/bin/dbmate https://github.com/amacneil/dbmate/releases/download/v2.19.0/dbmate-linux-amd64
          chmod +x /usr/local/bin/dbmate
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.7"
          python-version: "3.10"
          enable-cache: true
      - name: Setup Python project
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - name: Run tests
        # TODO: find a way to handle local dev for icij-common properly...
        run: |
          cd icij-worker
          uv sync --dev --all-extras --frozen
          uv pip install ../icij-common tests/test-plugin
          uv run --no-sync --frozen pytest -vvv --cache-clear --show-capture=all -r A tests
    services:
      neo4j:
        image: neo4j:4.4.17
        env:
          NEO4J_AUTH: neo4j/theneo4jpassword
          NEO4JLABS_PLUGINS: '["apoc"]'
        options: >-
          --health-cmd "cypher-shell -u neo4j -p theneo4jpassword -d neo4j 'CALL db.ping()'"
          --health-interval 2s
          --health-timeout 2s
          --health-retries 10
          --health-start-period 20s
        ports:
          - 7475:7474
          - 7688:7687
      test-rabbit-mq:
        image: rabbitmq:3.13.7-management
        options: >-
          --health-cmd "rabbitmq-diagnostics -q ping"
          --health-interval 2s
          --health-timeout 2s
          --health-retries 10
          --health-start-period 20s
        ports:
          - 5673:5672
          - 15673:15672
      test-postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: changeme
        options: >-
          --health-cmd pg_isready
          --health-interval 2s
          --health-timeout 2s
          --health-retries 10
          --health-start-period 5s
        ports:
          - "5555:5432"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
